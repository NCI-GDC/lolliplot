'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _LolliplotNode = require('./LolliplotNode');

var _LolliplotNode2 = _interopRequireDefault(_LolliplotNode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Lolliplot = function (_Component) {
  _inherits(Lolliplot, _Component);

  function Lolliplot() {
    var _temp, _this, _ret;

    _classCallCheck(this, Lolliplot);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {
      animating: false,
      startMin: 0,
      startMax: 500,
      targetMin: 0,
      targetMax: 500,
      domain: 500,
      currentAnimationIteration: 0,
      consequenceFilters: [],
      impactFilters: [],
      dragging: false,
      draggingMinimap: false,
      zoomStart: null,
      sliding: false,
      slideStart: null,
      slideStartMin: null,
      slideStartMax: null,
      type: 'Consequence',
      offsetX: 0,
      proteinMouseover: false
    }, _this.update = function (state) {
      return _this.setState(state);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Lolliplot.prototype.render = function render() {
    var _this2 = this;

    return _react2.default.createElement(_LolliplotNode2.default, _extends({
      d3: this.props.d3,
      height: 450,
      onProteinClick: function onProteinClick(d) {
        return _this2.props.update({ min: d.start, max: d.end });
      },
      _update: this.update,
      update: this.props.update,
      onProteinMouseover: function onProteinMouseover(d) {
        if (_this2.props.onProteinMouseover) {
          _this2.props.onProteinMouseover(d);
        }
        _this2.update({ proteinMouseover: d.id });
      },
      onProteinMouseout: function onProteinMouseout(d) {
        if (_this2.props.onProteinMouseout) {
          _this2.props.onProteinMouseout(d);
        }
        _this2.update({ proteinMouseover: false });
      }
    }, this.state, this.props));
  };

  return Lolliplot;
}(_react.Component);

exports.default = Lolliplot;