import 'babel-polyfill'
import ProteinLolliplot, { setupStore } from '@oncojs/lolliplot'
import mockData from '@oncojs/lolliplot/data'
import * as d3 from 'd3'

let addChart = selector => {
  let domainWidth = 500
  let store = setupStore({ domainWidth })

  let root = document.querySelector(`${selector} .root`)

  // -- for testing d3@3
  // let d3 = window.d3

  let proteinLolliplot, draw, remove, reset
  proteinLolliplot = ProteinLolliplot({
    element: root,
    data: mockData(580),
    onMutationClick: (d, event) => console.log(d, event),
    height: 450,
    domainWidth,
    mutationId: `MU10`,
    store,
    d3,
    animate: false,
  })

  draw = proteinLolliplot.draw
  remove = proteinLolliplot.remove
  reset = proteinLolliplot.reset

  /*----------------------------------------------------------------------------*/

  let range = document.querySelector(`${selector} .mut-count`)
  let label = document.querySelector(`${selector} .mut-count-label`)

  let zoomMinInput = document.querySelector(`${selector} .zoom-min`)
  let zoomMaxInput = document.querySelector(`${selector} .zoom-max`)

  zoomMinInput.value = 0
  zoomMaxInput.value = domainWidth

  store.subscribe(() => {
    let { targetMin, targetMax } = store.getState()
    zoomMinInput.value = targetMin
    zoomMaxInput.value = targetMax
  })

  zoomMinInput.addEventListener(`input`, e => {
    store.update({
      animating: true,
      targetMin: +e.target.value,
      targetMax: store.getState().targetMax,
    })
    draw()
  })

  zoomMaxInput.addEventListener(`input`, e => {
    store.update({
      animating: true,
      targetMin: store.getState().targetMin,
      targetMax: +e.target.value,
    })
    draw()
  })

  let resetBtn = document.querySelector(`${selector} .reset`)

  resetBtn.addEventListener(`click`, reset)

  window.range = range

  range.oninput = event => {
    remove()
    label.innerText = event.target.value
    proteinLolliplot = ProteinLolliplot({
      element: root,
      data: mockData(+event.target.value),
      clickHandler: d => console.dir(d),
      height: 450,
      domainWidth,
      mutationId: `MU10`,
      store,
      d3,
    })

    draw = proteinLolliplot.draw
    remove = proteinLolliplot.remove
    reset = proteinLolliplot.reset
  }

  window.addEventListener(`resize`, () => {
    remove()
    proteinLolliplot = ProteinLolliplot({
      element: root,
      data: mockData(80),
      clickHandler: d => console.dir(d),
      height: 450,
      mutationId: `MU10`,
      store,
      d3,
    })

    draw = proteinLolliplot.draw
    remove = proteinLolliplot.remove
    reset = proteinLolliplot.reset
  })
}

addChart(`.container-1`)
addChart(`.container-2`)
