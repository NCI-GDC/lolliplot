import 'babel-polyfill'
import ProteinLolliplot, { setupStore } from '@oncojs/lolliplot'
import mockData from '@oncojs/lolliplot/data'

let domainWidth = 500

let store = setupStore({ domainWidth })

let draw, proteinLolliplot
proteinLolliplot = ProteinLolliplot({
  selector: `#root`,
  data: mockData(80),
  clickHandler: d => console.log(d),
  height: 450,
  // hideStats: true,
  domainWidth,
  mutationId: `MU10`,
  store,
})

draw = proteinLolliplot.draw

/*----------------------------------------------------------------------------*/

let range = document.querySelector(`#mut-count`)
let label = document.querySelector(`#mut-count-label`)

let zoomMinInput = document.querySelector(`#zoom-min`)
let zoomMaxInput = document.querySelector(`#zoom-max`)
let root = document.querySelector(`#root`)

zoomMinInput.value = 0
zoomMaxInput.value = domainWidth

store.subscribe(() => {
  let { targetMin, targetMax } = store.getState()
  zoomMinInput.value = targetMin
  zoomMaxInput.value = targetMax
})

zoomMinInput.addEventListener(`input`, e => {
  store.update({
    animating: true,
    targetMin: +e.target.value,
    targetMax: store.getState().targetMax,
  })
  draw()
})

zoomMaxInput.addEventListener(`input`, e => {
  store.update({
    animating: true,
    targetMin: store.getState().targetMin,
    targetMax: +e.target.value,
  })
  draw()
})

window.range = range

range.oninput = event => {
  root.innerHTML = ``
  label.innerText = event.target.value
  proteinLolliplot = ProteinLolliplot({
    selector: `#root`,
    data: mockData(+event.target.value),
    clickHandler: d => console.dir(d),
    height: 450,
    domainWidth,
    mutationId: `MU10`,
    store,
  })
}

window.addEventListener(`resize`, () => {
  proteinLolliplot = ProteinLolliplot({
    selector: `#root`,
    data: mockData(+event.target.value),
    clickHandler: d => console.dir(d),
    height: 450,
    mutationId: `MU10`,
    store,
  })

  draw = proteinLolliplot.draw
})
